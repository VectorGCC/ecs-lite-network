// <auto-generated/>
using Mirror;
public abstract partial class EntityView : EntityViewBase
{
[SyncVar(hook = nameof(HealthHook))] public Health Health;
public void HealthHook(Health oldComponent, Health newComponent)
{
ApplyState();
}
protected override T Read<T>() where T : struct
{
 if (Health is T component0)
return component0;
return default;
}
private void Update()
{
if (!NetworkServer.active)
return;
if (_entity.Version != _lastVersion)
{
_lastVersion = _entity.Version;
Health = _entity.Read<Health>();
}
}
}
